---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import PageHeader from '@components/PageHeader.astro'
import { Card, Pagination } from 'accessible-astro-components'
import { getCollection } from 'astro:content'
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'

export const getStaticPaths = (async ({ paginate }) => {
  const blog = await getCollection('blog')
  return paginate(blog, { pageSize: 6 })
}) satisfies GetStaticPaths

interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { page } = Astro.props

// Prepare pagination props
const currentPage = page.currentPage
const totalPages = Math.ceil(page.total / page.size)
---

<DefaultLayout
  title="Blog"
  description="Latest updates from the dungeon."
>
  <PageHeader
    title="Blog"
    subtitle='Latest updates from the dungeon.'
    bgType="bordered"
  />
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
      <ul class="my-3 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          page.data.map((post) => (
            <li>
              <Card
                imageComponent={post.data.image}
                url={'/blog/' + post.id}
                title={post.data.title}
                footer={'Author: ' + post.data.author}
              >
                {post.data.description}
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/blog' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/blog/${Math.ceil(page.total / page.size)}` : null}
          currentPage={`${page.currentPage}`}
          totalPages={`${Math.ceil(page.total / page.size)}`}
          ariaLabel="Blog pagination"
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss" is:global>
  @use '../../assets/scss/base/mixins' as *;

  .card {
    h3 {
      margin-block-end: var(--space-xs);
      line-height: 0.75;
    }

    a {
      @include text-decoration(transparent, var(--foreground-color), 4px, 2px);
    }
  }
</style>
